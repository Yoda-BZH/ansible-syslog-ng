---

syslog_config_version: 3

syslog_options_group: 'adm'

# A list of hashes that defines a trio of file destination, filter, log and
# also a lograte; a simplified configuration that is sufficient for most cases.
#
# - id:       unique identifier (required)
#   source:   source of logging messages - 'src', or 'kernsrc'; default is 'src'
#   filepath: log file path relative to /var/log/; default is '${id}.log'
#   filter:   filter expression; default is 'program(${id})'
#   final:    whether set a final flag; default is false
#   delete_after_days: how many days to keep old logs (lograte); default is forever
#
# Example:
#   syslog_logs:
#     - id: dhcpd
#     - id: vsftpd_warn
#       source: src
#       filepath: ftp/vsftpd.warn.log
#       filter: program(vsftpd) and level(warn..crit)
#       final: true
#       delete_after_days: 365
#
# This will produce:
#   destination d_dhcpd { file("/var/log/dhcpd.log" template(t_file)); };
#   destination d_vsftpd_warn { file("/var/log/vsftpd_warn.log" template(t_file)); };
#   filter f_dhcpd { program(dhcpd); };
#   filter f_vsftpd_warn { program(vsftpd) and level(warn..crit) };
#   log { source(src); filter(f_dhcpd); destination(d_dhcpd); };
#   log { source(src); filter(f_vsftpd_warn); destination(d_vsftpd_warn); flags(final); };
#
# ...and configuration for logrotate.
#
syslog_logs:
  - id: cron
    source: src
    filepath: cron.log
    filter: facility(cron)
  - id: iptables
    source: kernsrc
    filepath: iptables.log
    filter: message("^(\\[.*\..*\] |)ip6?tables.*")
    final: true
  - id: kern
    source: kernsrc
    filepath: kern.log
    filter: facility(kern)
  - id: syslog
    filepath: syslog.log
    filter: not facility(authpriv)
  - id: user
    filepath: user.log
    filter: facility(user)
  - id: warn
    filepath: warn.log
    filter: level(warn..alert)
  - id: emergency
    filepath: emergency
    filter: level(emerg)
  - id: authlog
    filepath: auth.log
    filter: facility(auth, authpriv)
  - id: messages
    filepath: messages
    filter: level(info..alert) and not facility(auth, authpriv, mail, cron, kern) and not program (syslog-ng) and not facility(local7) and not ( program (dhcpcd) and level(debug..notice) )
  - id: mail
    filepath: mail.log
    filter: facility(mail)
  - id: ansible
    filepath: ansible.log
  - id: dhcpd
    filepath: dhcp.log
    filter: facility(local7) # program(dhcpd) and message("dhcpd")

# Additional log sources to be merged with the default ones.
#
# <source_id>:  unique identifier of the source (typically just 'src')
#   comment:      an optional comment
#   <driver>:     key is name of the source driver, typically unix_stream or file
#                 (underscores are replaced with hyphens); value is the driver
#                 parameter
# Example:
#   syslog_sources:
#     src:
#       - comment: Logging socket inside Postfix chroot jail
#         unix_stream: /var/spool/postfix/private/log
#     mysrc:
#       - file: /run/foo/log
#
syslog_sources:
  src:
    - comment: messages generated by syslog-ng
      system:
#  src:
#    - comment: journald
#      unix_stream: /run/systemd/journal/socket

# The template to be used in all destination drivers expect usertty.
syslog_default_template: '${YEAR}-${MONTH}-${DAY}T${HOUR}:${MIN}:${SEC} ${LEVEL} ${MSGHDR}${MSG}\n'

# Should be added logs for grsecurity and PAX?
syslog_hardened: false

syslog_journald_config:
  Storage: volatile
  ForwardToSyslog: yes

syslog_journald_wipe_persistent: true
